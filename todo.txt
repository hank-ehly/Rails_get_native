- Create a profile page

- Create a user model

- Create development database

- Create video list

- Find some videos and add them to list

- Create a user class and add hehly523 as a login-able user

- Find pic of Hank to put on profile

- Create login page

- Create user/authentication functionality 




// GOTTA INDEX BY LANGUAGE TOO!




*** Indexing of Videos ***

CLICK VIDEO INDEX

	# list all topics

	<% @topics.each do |topic| %>
	Topic name 				<%= topic.menu_name %>
	Number of videos 	<%= topic.videos.count %>

CLICK TOPIC >>
	
	sends clicked topic.id >>
	
	# list videos of clicked topic

	<% @topic.videos.each do |video| %>
	Video Speaker 				<%= video.speaker %>
	Video Length  				<%= video.length %>
	Video script snippet  <%= video.script.(format for snippet with '...' at certain breakpoint) %>

CLICK SPEAKER >>

	sends video.speaker.id >>

	Speaker name: 		<%= @speaker.full_name %>
	Number of Videos: <%= @speaker.videos.count %>
	
	# Speaker videos by topic.alphabetically

	@speaker.videos.order("videos.topic_name ASC").each do |video|

	video.thumbnail
	video.topic_name
	video.view_count

CLICK VIDEO >>

	sends video.id

	# show video

	<video src="<%= @video.path %>"></video>
	Length: 	<%= @video.duration %>
	Topic:		<%= @video.topic_name %>
	Speaker: 	<%= @video.speaker %>

Video

	belongs_to :speaker
	belongs_to :topic

Speaker

	has_many :videos
	has_and_belongs_to_many :topics

Topic

	has_many :videos
	has_and_belongs_to_many :speakers





/* videos table schema */	 DONE

'id' 						INT PRIMARY KEY
'speaker_id'		INT FOREIGN KEY
'topic_id'			INT FOREIGN KEY
'duration'			INT
'description'		TEXT
'views_count'		INT

####

video_filepath?
video_thumbnail_filepath?
video_script?
	- how multiple languages?

####

'timestamps'

/* speakers table schema */	

'id' 						INT PRIMARY KEY
'first_name'		VARCHAR(255)
'last_name'			VARCHAR(255)
'timestamps'

/* topics table schema */	

'id' 						INT PRIMARY KEY
'menu_name'			VARCHAR(255)
'timestamps'

/* speakers_topics table schema */	

'speaker_id'		INT FOREIGN KEY
'topic_id'			INT FOREIGN KEY





/* Join Migration */

Join table name: "speakers_topics"

rails generate migration CreateSpeakersTopicsJoin

create_table :speakers_topics, :id => false do |t|
	t.integer "speaker_id"
	t.integer "topic_id"
end
add_index :speakers_topics, ["speaker_id", "topic_id"]














how to do join table

1) create migration:

ABC order
FirstTableName_SecondTableName

set id: false cuz you don't want primary key

class CreateSpeakersTopicsJoin < ActiveRecord::Migration
  def change
    create_table :speakers_topics, id: false do |t|
    	t.integer :speaker_id
    	t.integer :topic_id
    end
    add_index :speakers_topics, [:speaker_id, :topic_id]
  end
end

RUN MIGRATION

2) update your models

class Speaker < ActiveRecord::Base

	has_and_belongs_to_many :topics

end


class Topic < ActiveRecord::Base

	has_and_belongs_to_many :speakers
	
end

3) console

irb(main):003:0> topic = Topic.find(1)

  Topic Load (0.3ms)  SELECT  `topics`.* FROM `topics` WHERE `topics`.`id` = 1 LIMIT 1
=> #<Topic id: 1, name: "New Topic Updated", created_at: "2015-04-08 00:47:56", updated_at: "2015-04-08 01:11:56">
irb(main):004:0> topic.speakers
  Speaker Load (0.3ms)  SELECT `speakers`.* FROM `speakers` INNER JOIN `speakers_topics` ON `speakers`.`id` = `speakers_topics`.`speaker_id` WHERE `speakers_topics`.`topic_id` = 1
=> #<ActiveRecord::Associations::CollectionProxy []>
irb(main):005:0>

irb(main):006:0> speaker = Speaker.find(1)

  Speaker Load (0.4ms)  SELECT  `speakers`.* FROM `speakers` WHERE `speakers`.`id` = 1 LIMIT 1
=> #<Speaker id: 1, first_name: "Nicholson", last_name: "Mcdowell", native_language: 0, created_at: "2015-04-09 00:55:07", updated_at: "2015-04-09 01:14:45", gender: true, age: 1, about: nil>


irb(main):010:0> topic.speakers << speaker

   (0.2ms)  BEGIN
  SQL (0.2ms)  INSERT INTO `speakers_topics` (`topic_id`, `speaker_id`) VALUES (1, 1)
   (0.3ms)  COMMIT
=> #<ActiveRecord::Associations::CollectionProxy [#<Speaker id: 1, first_name: "Nicholson", last_name: "Mcdowell", native_language: 0, created_at: "2015-04-09 00:55:07", updated_at: "2015-04-09 01:14:45", gender: true, age: 1, about: nil>]>
irb(main):011:0> topic.speakers
=> #<ActiveRecord::Associations::CollectionProxy [#<Speaker id: 1, first_name: "Nicholson", last_name: "Mcdowell", native_language: 0, created_at: "2015-04-09 00:55:07", updated_at: "2015-04-09 01:14:45", gender: true, age: 1, about: nil>]>
irb(main):012:0> topic.speakers.length
=> 1





this is where you manage news posts >> creat model/ save email into model every time, show it on admin screen



guides.rubyonrails.org/action_mailer_basics.html



published_at << publish at future time



ENV vars in .rbenv << gotta install rbenv stuff
brew install rbenv-vars (google it)
- gotta add rbenv-vars to git ignore



ask Matt:

GET NATIVE
- rendering new view in profile (how to not make it skip back to top every time)
- video>add (how to show speaker's full name)
- reauthentication of password when doing destructive actions
- how to instantiate new playlist every time you make user?

KANA
- how to set up an inquiry mailer to a specific address
- how to set up a simple blog post functionality
- don't allow user to make video 'not main' if no other video is 'main'
- loading javascript is weird. Example, when you jump TO a link, the javascript doesn't work until you refresh

GENERAL
- RESTful links


reccomend to Kazuyo:
- take pics цик 16:9 (much better for websites)

KANA bugs:
- homepage carousel. when switching between them, the first image always pops up for a second


